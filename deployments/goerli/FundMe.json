{
  "address": "0x98B8cec664bE5D4aDb6D540b0d6C90C044e9B341",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdfe38f5b2aa6b6d3c6c044035e61d9cdc2e8ae056267da4aaf051c4c12160f52",
  "receipt": {
    "to": null,
    "from": "0xe837D13Fb48DEaA72e84Eeaee20142b108035bAb",
    "contractAddress": "0x98B8cec664bE5D4aDb6D540b0d6C90C044e9B341",
    "transactionIndex": 16,
    "gasUsed": "744993",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xaca975587eb1d7ad92bcd03c9d3a1ab9a5af719688904308b09515fe4eb7ecfc",
    "transactionHash": "0xdfe38f5b2aa6b6d3c6c044035e61d9cdc2e8ae056267da4aaf051c4c12160f52",
    "logs": [],
    "blockNumber": 8274568,
    "cumulativeGasUsed": "3951726",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "ef0369a311e98ae04c889d155f4d80ce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    address[] public funders;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n    mapping (address => uint256) addressToAmountFunded;\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >=10000000000, \\\"Didn't send enough wei\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n    modifier onlyOwner {\\n        if(i_owner == msg.sender){\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n    function withdraw() public onlyOwner{\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder]=0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n        }\\n        receive() external payable{\\n            fund();\\n        }\\n        fallback() external payable{\\n            fund();\\n        }\\n}\",\"keccak256\":\"0xfba81e31ba6a97ce89bbb99316c285d5b424bc941b1e56b2d31fef2dd1f7b958\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nlibrary  PriceConverter{\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price*1e10);\\n    }\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice*ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x5df2a4cb5c89f295a16293ac0c7d3283fd87c6a9fb6b8da3a49f626ad8cafb12\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610d76380380610d7683398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610c1761015f6000396000818161025901526104a80152610c176000f3fe60806040526004361061004e5760003560e01c80633ccfd60b14610067578063741bef1a1461007e578063b60d4288146100a9578063dba6335f146100b3578063dc0d3dff146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c610240565b005b34801561008a57600080fd5b50610093610480565b6040516100a091906106fc565b60405180910390f35b6100b161011b565b005b3480156100bf57600080fd5b506100c86104a6565b6040516100d59190610738565b60405180910390f35b3480156100ea57600080fd5b506101056004803603810190610100919061078e565b6104ca565b6040516101129190610738565b60405180910390f35b6402540be400610156600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461050990919063ffffffff16565b1015610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e90610818565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16036102c5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103705760008082815481106102ea576102e9610838565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036890610896565b9150506102c8565b50600067ffffffffffffffff81111561038c5761038b6108de565b5b6040519080825280602002602001820160405280156103ba5781602001602082028036833780820191505090505b50600090805190602001906103d09291906105d6565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f79061093e565b60006040518083038185875af1925050503d8060008114610434576040519150601f19603f3d011682016040523d82523d6000602084013e610439565b606091505b505090508061047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061099f565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106104da57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061051583610545565b90506000670de0b6b3a7640000858361052e91906109bf565b6105389190610a30565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190610aee565b5050509150506402540be400816105ce9190610b69565b915050919050565b82805482825590600052602060002090810192821561064f579160200282015b8281111561064e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105f6565b5b50905061065c9190610660565b5090565b5b80821115610679576000816000905550600101610661565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106c26106bd6106b88461067d565b61069d565b61067d565b9050919050565b60006106d4826106a7565b9050919050565b60006106e6826106c9565b9050919050565b6106f6816106db565b82525050565b600060208201905061071160008301846106ed565b92915050565b60006107228261067d565b9050919050565b61073281610717565b82525050565b600060208201905061074d6000830184610729565b92915050565b600080fd5b6000819050919050565b61076b81610758565b811461077657600080fd5b50565b60008135905061078881610762565b92915050565b6000602082840312156107a4576107a3610753565b5b60006107b284828501610779565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682077656900000000000000000000600082015250565b60006108026016836107bb565b915061080d826107cc565b602082019050919050565b60006020820190508181036000830152610831816107f5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a182610758565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108d3576108d2610867565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061092860008361090d565b915061093382610918565b600082019050919050565b60006109498261091b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610989600b836107bb565b915061099482610953565b602082019050919050565b600060208201905081810360008301526109b88161097c565b9050919050565b60006109ca82610758565b91506109d583610758565b92508282026109e381610758565b915082820484148315176109fa576109f9610867565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a3b82610758565b9150610a4683610758565b925082610a5657610a55610a01565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a8081610a61565b8114610a8b57600080fd5b50565b600081519050610a9d81610a77565b92915050565b6000819050919050565b610ab681610aa3565b8114610ac157600080fd5b50565b600081519050610ad381610aad565b92915050565b600081519050610ae881610762565b92915050565b600080600080600060a08688031215610b0a57610b09610753565b5b6000610b1888828901610a8e565b9550506020610b2988828901610ac4565b9450506040610b3a88828901610ad9565b9350506060610b4b88828901610ad9565b9250506080610b5c88828901610a8e565b9150509295509295909350565b6000610b7482610aa3565b9150610b7f83610aa3565b9250828202610b8d81610aa3565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bc557610bc4610867565b5b8282058414831517610bda57610bd9610867565b5b509291505056fea26469706673582212200b7d9bb267a81095961101c6459aa4f24743fb416d75dd8b8d4924a7ca267e4f64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633ccfd60b14610067578063741bef1a1461007e578063b60d4288146100a9578063dba6335f146100b3578063dc0d3dff146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c610240565b005b34801561008a57600080fd5b50610093610480565b6040516100a091906106fc565b60405180910390f35b6100b161011b565b005b3480156100bf57600080fd5b506100c86104a6565b6040516100d59190610738565b60405180910390f35b3480156100ea57600080fd5b506101056004803603810190610100919061078e565b6104ca565b6040516101129190610738565b60405180910390f35b6402540be400610156600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461050990919063ffffffff16565b1015610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e90610818565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16036102c5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103705760008082815481106102ea576102e9610838565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036890610896565b9150506102c8565b50600067ffffffffffffffff81111561038c5761038b6108de565b5b6040519080825280602002602001820160405280156103ba5781602001602082028036833780820191505090505b50600090805190602001906103d09291906105d6565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f79061093e565b60006040518083038185875af1925050503d8060008114610434576040519150601f19603f3d011682016040523d82523d6000602084013e610439565b606091505b505090508061047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061099f565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106104da57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061051583610545565b90506000670de0b6b3a7640000858361052e91906109bf565b6105389190610a30565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190610aee565b5050509150506402540be400816105ce9190610b69565b915050919050565b82805482825590600052602060002090810192821561064f579160200282015b8281111561064e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105f6565b5b50905061065c9190610660565b5090565b5b80821115610679576000816000905550600101610661565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106c26106bd6106b88461067d565b61069d565b61067d565b9050919050565b60006106d4826106a7565b9050919050565b60006106e6826106c9565b9050919050565b6106f6816106db565b82525050565b600060208201905061071160008301846106ed565b92915050565b60006107228261067d565b9050919050565b61073281610717565b82525050565b600060208201905061074d6000830184610729565b92915050565b600080fd5b6000819050919050565b61076b81610758565b811461077657600080fd5b50565b60008135905061078881610762565b92915050565b6000602082840312156107a4576107a3610753565b5b60006107b284828501610779565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682077656900000000000000000000600082015250565b60006108026016836107bb565b915061080d826107cc565b602082019050919050565b60006020820190508181036000830152610831816107f5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a182610758565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108d3576108d2610867565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061092860008361090d565b915061093382610918565b600082019050919050565b60006109498261091b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610989600b836107bb565b915061099482610953565b602082019050919050565b600060208201905081810360008301526109b88161097c565b9050919050565b60006109ca82610758565b91506109d583610758565b92508282026109e381610758565b915082820484148315176109fa576109f9610867565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a3b82610758565b9150610a4683610758565b925082610a5657610a55610a01565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a8081610a61565b8114610a8b57600080fd5b50565b600081519050610a9d81610a77565b92915050565b6000819050919050565b610ab681610aa3565b8114610ac157600080fd5b50565b600081519050610ad381610aad565b92915050565b600081519050610ae881610762565b92915050565b600080600080600060a08688031215610b0a57610b09610753565b5b6000610b1888828901610a8e565b9550506020610b2988828901610ac4565b9450506040610b3a88828901610ad9565b9350506060610b4b88828901610ad9565b9250506080610b5c88828901610a8e565b9150509295509295909350565b6000610b7482610aa3565b9150610b7f83610aa3565b9250828202610b8d81610aa3565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bc557610bc4610867565b5b8282058414831517610bda57610bd9610867565b5b509291505056fea26469706673582212200b7d9bb267a81095961101c6459aa4f24743fb416d75dd8b8d4924a7ca267e4f64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}